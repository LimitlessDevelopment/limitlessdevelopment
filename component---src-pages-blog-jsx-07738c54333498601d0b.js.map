{"version":3,"sources":["webpack:///./src/components/CategoriesBlock.jsx","webpack:///./src/pages/blog.jsx"],"names":["Header","BlogPosts","props","theme","colors","black","blue","Fspace","Fwarp","Blog","edges","data","blogs","title","map","node","key","id","cover","frontmatter","childImageSharp","fluid","path","date","tags","excerpt","query"],"mappings":"+HAKkB,yIAmBG,gF,4LCbfA,EAAM,kNAeNC,EAAS,8MAcD,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAMC,OAdjC,iFAwBTC,EAAM,yHASNC,EAAK,gIA6CIC,UAnCF,SAAC,GAAc,IAClBC,EADiB,EAAXC,KACSC,MAAfF,MAIR,OACE,YAAC,IAAD,KACE,YAACV,EAAD,aAGA,YAAC,IAAD,CAAQa,MAAO,mBACf,YAACZ,EAAD,KAEES,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAClB,YAACP,EAAD,KACQ,YAAC,IAAD,CACEQ,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMP,EAAKI,YAAYG,KACvBT,MAAOE,EAAKI,YAAYN,MACxBU,KAAMR,EAAKI,YAAYI,KACvBC,KAAMT,EAAKI,YAAYK,KACvBC,QAASV,EAAKU,UAEhB,YAAClB,EAAD,aAkCD,IAAMmB,EAAK","file":"component---src-pages-blog-jsx-07738c54333498601d0b.js","sourcesContent":["import React from 'react';\n//import { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst CatContainer = styled.div`\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: column;\n  //flex-wrap: unwrap;\n  justify-content: left;\n  // a {\n  //   //margin: 0 1rem 1rem 0;\n  //   color: ${props => props.theme.colors.black.blue};\n  //   padding-left: 10rem;\n  //   background: ${props => props.theme.colors.white.grey};\n  //   border-radius: 10px;\n  //   &:hover {\n  //     color: ${props => props.theme.colors.white.light};\n  //     background: ${props => props.theme.colors.primary.light};\n  //     border: ${props => props.theme.colors.primary.light};\n  //   }\n  // }\n`;\nconst OuterrContainer = styled.div`\nborder: 40px;\n`;\n\n\nconst CategoriesBlock = ({ list }) => (\n  <CatContainer>\n    {list &&\n      list.map(tag => {\n        //const upperTag = tag.title;  \n        return (\n          <OuterrContainer style= {{ }}>\n          {tag.title}\n          </OuterrContainer>\n        );\n      })}\n  </CatContainer>\n);\n\nexport default CategoriesBlock;\n\nCategoriesBlock.propTypes = {\n  list: PropTypes.array,\n};\n\n","import React,{ useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { BlogList } from 'components';\nimport { Layout } from 'layouts';\nimport  CategoriesBlock  from 'components/CategoriesBlock';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\n\nconst Header = styled.div`\ndisplay: flex;\n padding-bottom: 2%;\n padding-top: 2%;\n// z-value: 200;\njustify-content: center;\n//padding: 0% 0 2% 0;\n//background: ${props => props.theme.colors.black.blue};\nfont-size: 2rem;\n\n@media (max-width: 800px) {\n    padding-top: 10%;\n    padding-bottom: 5%;\n  }\n`;\nconst BlogPosts = styled.div`\ndisplay: flex;\nposition: relative ;\n//grid-gap: 5px;\n//padding-top: 5%;\nflex-direction: column;\n\nmargin: auto;\nwidth: 80vw;\n\nborder-radius: 1rem;\n-moz-border-radius: 1rem;\n-webkit-border-radius::1rem 1rem;\n//padding: 0% 0 2% 0;\nbackground: ${props => props.theme.colors.black.blue};\nbox-shadow: 0 4px 120px rgba(0,0,0,0.1);\n\n//font-size: 2rem;\n\n@media (max-width: 800px) {\nwidth: 95vw;\n  }\n`;\n\nconst Fspace = styled.div`\n//display: flex;\nheight:1rem;\nbackground: white;\n@media (max-width: 800px) {\n    // padding-top: 10%;\n    // padding-bottom: 5%;\n  }\n`;\nconst Fwarp = styled.div`\ndisplay: flex;\nflex-direction: column;\n//height:20%;\n@media (max-width: 800px) {\n    // padding-top: 10%;\n    // padding-bottom: 5%;\n  }\n`;\n\nconst Blog = ({ data }) => {\n  const { edges } = data.blogs;\n  //var karr = edges.filter(({node}) => node.frontmatter.category == ono)\n  \n\n  return (\n    <Layout>\n      <Header>\n      Blog\n      </Header>\n      <Helmet title={'Limitless Blog'} />\n      <BlogPosts>\n      {        \n        edges.map(({ node }) => (\n<Fwarp>\n        <BlogList\n          key={node.id}\n          cover={node.frontmatter.cover.childImageSharp.fluid}\n          path={node.frontmatter.path}\n          title={node.frontmatter.title}\n          date={node.frontmatter.date}\n          tags={node.frontmatter.tags}\n          excerpt={node.excerpt}\n        />\n        <Fspace>\n\n        </Fspace>\n</Fwarp>\n      ))\n      }      \n      </BlogPosts>\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    blogs: allMarkdownRemark(\n      filter: { fileAbsolutePath: { glob: \"**/blogs/**/*.md\" } frontmatter: { published: { eq: false} }}\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 500)\n          frontmatter {\n            path\n            date\n            title\n            category\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 100\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}