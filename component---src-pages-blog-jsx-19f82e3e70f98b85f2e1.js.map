{"version":3,"sources":["webpack:///./src/pages/blog.jsx"],"names":["Blog","_ref","edges","data","allMarkdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","layouts__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","title","map","_ref2","node","components__WEBPACK_IMPORTED_MODULE_4__","key","id","cover","frontmatter","childImageSharp","fluid","path","date","tags","excerpt","propTypes","PropTypes","shape","arrayOf","string","object","isRequired","array","query"],"mappings":"2MAOMA,EAAO,SAAAC,GAAc,IACjBC,EADiBD,EAAXE,KACSC,kBAAfF,MACR,OACEG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAAC,EAAD,CAAQC,MAAO,SAEdR,EAAMS,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTR,OAAAC,EAAA,EAAAD,CAACS,EAAA,EAAD,CACEC,IAAKF,EAAKG,GACVC,MAAOJ,EAAKK,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMR,EAAKK,YAAYG,KACvBX,MAAOG,EAAKK,YAAYR,MACxBY,KAAMT,EAAKK,YAAYI,KACvBC,KAAMV,EAAKK,YAAYK,KACvBC,QAASX,EAAKW,cAOTxB,YAEfA,EAAKyB,UAAY,CACftB,KAAMuB,IAAUC,MAAM,CACpBvB,kBAAmBsB,IAAUC,MAAM,CACjCzB,MAAOwB,IAAUE,QACfF,IAAUC,MAAM,CACdd,KAAMa,IAAUC,MAAM,CACpBH,QAASE,IAAUG,OACnBX,YAAaQ,IAAUC,MAAM,CAC3BV,MAAOS,IAAUI,OAAOC,WACxBV,KAAMK,IAAUG,OAAOE,WACvBrB,MAAOgB,IAAUG,OAAOE,WACxBT,KAAMI,IAAUG,OAAOE,WACvBR,KAAMG,IAAUM,YAGnBD,iBAMJ,IAAME,EAAK","file":"component---src-pages-blog-jsx-19f82e3e70f98b85f2e1.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { BlogList } from 'components';\nimport { Layout } from 'layouts';\n\nconst Blog = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Helmet title={'Blog'} />\n      {/* <Header title=\"Blog Page\">Gatsby Tutorial Starter</Header> */}\n      {edges.map(({ node }) => (\n        <BlogList\n          key={node.id}\n          cover={node.frontmatter.cover.childImageSharp.fluid}\n          path={node.frontmatter.path}\n          title={node.frontmatter.title}\n          date={node.frontmatter.date}\n          tags={node.frontmatter.tags}\n          excerpt={node.excerpt}\n        />\n      ))}\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { frontmatter: { published: { eq: true} } }\n      sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200)\n          frontmatter {\n            title\n            path\n            date(formatString: \"MM.DD.YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}