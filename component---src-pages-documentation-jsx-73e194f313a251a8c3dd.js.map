{"version":3,"file":"component---src-pages-documentation-jsx-73e194f313a251a8c3dd.js","mappings":"2SASA,MAAMA,GAAOC,EAAAA,EAAAA,GAAA,WAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,iZAkCPC,GAAKJ,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,gKAkCLE,GAASL,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,wJAiCTG,GAAUN,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,kDAmChB,MA1BiBI,IAAA,IAAC,KAAEC,EAAI,MAAEC,EAAK,MAAEC,GAAOH,EAAA,OACtCI,EAAAA,EAAAA,GAACC,EAAAA,GAAS,MACRD,EAAAA,EAAAA,GAACZ,EAAO,MACRY,EAAAA,EAAAA,GAACL,EAAU,MACTK,EAAAA,EAAAA,GAACP,EAAK,MACJO,EAAAA,EAAAA,GAACE,EAAAA,KAAI,CAACC,GAAIN,EAAME,MAAOA,IACrBC,EAAAA,EAAAA,GAACI,EAAAA,EAAG,CAACC,MAAOP,OAMXE,EAAAA,EAAAA,GAACN,EAAS,MACbM,EAAAA,EAAAA,GAACE,EAAAA,KAAI,CAACI,MAAS,CAACC,MAAM,WAAYJ,GAAIN,GACnCE,MASG,E,kBClId,MAAMS,GAASnB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,2JAqCTiB,GAAKpB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,mEAULkB,GAAgBrB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,sGAiBhBmB,GAAOtB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,6DA6Cb,MArCsBI,IAAe,IAAd,KAAEgB,GAAMhB,EAC7B,MAAM,MAAEiB,GAAUD,EAAKE,KAIvB,OACEd,EAAAA,EAAAA,GAACe,EAAAA,GAAM,MACLf,EAAAA,EAAAA,GAACgB,EAAAA,GAAM,CAACjB,MAAO,8BACrBC,EAAAA,EAAAA,GAACW,EAAO,OACFX,EAAAA,EAAAA,GAACiB,EAAAA,GAAM,CAAClB,MAAM,mBAEdC,EAAAA,EAAAA,GAACU,EAAgB,MAEjBV,EAAAA,EAAAA,GAACQ,EAAS,KAERK,EAAMK,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAC3BnB,EAAAA,EAAAA,GAACS,EAAK,MACET,EAAAA,EAAAA,GAACqB,EAAQ,CACPC,IAAKF,EAAKG,GACVzB,MAAOsB,EAAKI,YAAY1B,MAAM2B,gBAAgBpB,MAC9CR,KAAMuB,EAAKI,YAAY3B,KACvBE,MAAOqB,EAAKI,YAAYzB,MACxB2B,KAAMN,EAAKI,YAAYE,KAEvBC,QAASP,EAAKO,UAGhB,MAMK,C","sources":["webpack://gatsby-tutorial-starter/./src/components/DocsList.jsx","webpack://gatsby-tutorial-starter/./src/pages/documentation.jsx"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport { Container } from 'layouts';\n\n\nconst Wrapper = styled.article`\n  //margin: 0 10rem;\n\ndisplay: flex;\njustify-content: stretch;\nwidth:80vw;\nborder: 1px solid #e5e5e5;\nbox-shadow: 0 .5px 0 0 #ffffff inset, 0 2px 2px 0 #e0d9d9;\n@media (max-width: 800px) {\n  flex-direction: column;\n  padding-bottom: 10%;\n  box-shadow: 0 0.5px 0 0 #ffffff inset, 0 2px 2px 0 #e0d9d9;\n  //border-radius: 1rem;\n  width:100vw;\n  z-index: 0;\n}\nbackground: #FFF;\n//box-shadow: 0 4px 120px rgba(0,0,0,0.1);\ntransition: 0.1s;\n//position:relative;\n//z-index:10;\n&:hover {\n  \n  //box-shadow: 0 5px 35px 0px rgba(0,0,0,.1);\n  //box-shadow: 0 4px 120px rgba(0,0,0,0.1);\n  //box-shadow: 0 1px #FFFFFF inset, 0 1px 3px rgba(34, 25, 25, 0.4);\n  box-shadow: 0 0.5px 0 0 #ffffff inset, 0 2px 2px 0 #e0d9d9;\n\n  transform: scale(1.02);\n  //background: #f2edec;\n  //border-radius: 1rem;\n}\n`;\n\nconst Image = styled.div`\n\n  height: 5rem;\n  .gatsby-image-wrapper {\n    //border-radius: ${props => props.theme.borderRadius.default};\n    object-fit: contain;\n    //position: relative;\n    //margin-left: auto;\n          margin-right: auto;\n           width: 5rem;\n           height: 5rem;\n          //top: 2.5rem;\n  }\n@media (max-width: 800px) {\n  padding-top: 2%;\n  padding-bottom: 0%;\n}\n  //flex-basis: 20rem;\n  \n  //max-width: 100%;\n  //width: 10rem;\n  //height: 100%;\n  //object-fit: contain;\n\n  // @media (max-width: 800px) {\n  //   flex-basis: 100%;\n  //   max-width: 100%;\n  //   width: 100%;\n  //   margin-bottom: 1.5rem;\n  // }\n  // @media (max-width: 500px) {\n  //   min-height: 200px;\n  // }\n`;\nconst TitleLink = styled.div`\ndisplay: flex;\nalign-self:center;\njustify-content:center;\nflex-basis: 100vw;\npadding-left: 2%;\n\n@media (max-width: 800px) {\n  padding-top: 1%;\n  padding-bottom: 0%;\n}\n`;\nconst Title = styled.h1`\n  //margin: 0;\n`;\nconst LeftBlock = styled.div`\ndisplay: flex;  \njustify-content:center;\nflex-direction: column;\npadding: 2%;\nmin-width: 50%;\nmargin-bottom: 1rem;\n  h1 {\n    font-size: 2rem;\n    display: inline-block;\n    color: ${props => props.theme.colors.black.lighter};\n    transition: all ${props => props.theme.transitions.default.duration};\n    &:hover {\n      //color: ${props => props.theme.colors.primary.base};\n    }\n  }\n  text-align: center;\n`;\nconst RightBlock = styled.div`\ndisplay: flex;  \npadding: 1% 0%;\n//justify-content:center;\nflex-direction: row;\n//min-width: 50%;\n//margin-bottom: 1rem;\n//text-align: center;\n`;\nconst DocsList = ({ path, cover, title }) => (\n  <Container>\n    <Wrapper>\n    <RightBlock>\n      <Image>\n        <Link to={path} title={title}>\n          <Img fluid={cover} />\n        </Link>\n      </Image>\n      {/* <Date>{date}</Date> */}\n\n   \n           <TitleLink>\n        <Link style = {{color:\"#2b2523\"}} to={path}>\n          {title}</Link>\n        </TitleLink>\n        {/* <Information>\n\n        {excerpt}     \n\n         </Information> */}\n      </RightBlock>  \n    </Wrapper>\n  </Container>\n);\n\nexport default DocsList;\n\nDocsList.propTypes = {\n  cover: PropTypes.object.isRequired,\n  path: PropTypes.string.isRequired,\n  //excerpt: PropTypes.string,\n  //date: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  //tags: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport  DocsList from 'components/DocsList';\nimport { Layout } from 'layouts';\nimport  CategoriesBlock  from 'components/CategoriesBlock';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { Header } from 'components';\n\n\nconst BlogPosts = styled.div`\ndisplay: flex;\nposition: relative ;\n//grid-gap: 5px;\n//padding-top: 5%;\nflex-direction: column;\n\nmargin: auto;\n//width: 80vw;\n\n\nbackground: #2e3246;\nbox-shadow: 0 4px 120px rgba(0,0,0,0.1);\n\n//font-size: 2rem;\n\n@media (max-width: 800px) {\n//width: 95vw;\n\n  }\n`;\n\nconst Fspace = styled.div`\n//display: flex;\nheight:1rem;\nbackground: white;\nmin-height:25rem;\n@media (max-width: 800px) {\n    // padding-top: 10%;\n    // padding-bottom: 5%;\n    min-height:14rem;\n  }\n  @media (max-width: 300px) {\n    min-height:10rem;\n  }\n\n`;\nconst Fwarp = styled.div`\ndisplay: flex;\nflex-direction: column;\n//height:20%;\n\n@media (max-width: 800px) {\n    // padding-top: 10%;\n    // padding-bottom: 5%;\n  }\n`;\nconst ContainerWrapper = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content:center;\n\n//top:-5rem;\n// overflow:hidden;\n//   grid-template-rows: 1fr 1fr;\n//   grid-template-columns: 1fr;\n//   grid-template-areas: \n//   \"a\"\n//   ;\n//   grid-auto-flow: dense; \n@media (max-width: 800px) {\n  padding-top: 10%;\n  }\n`;\nconst M_Space = styled.div`\ndisplay: flex;\n\n@media (max-width: 800px) {\n    padding-top: 20%;\n    //padding-bottom: 5%;\n  }\n`;\nconst Documentation = ({ data }) => {\n  const { edges } = data.docs;\n  //var karr = edges.filter(({node}) => node.frontmatter.category == ono)\n  \n\n  return (\n    <Layout>\n      <Helmet title={'Limitless Documentations'} />\n<M_Space></M_Space>\n      <Header title=\"Documentation\"></Header>\n\n      <ContainerWrapper>\n     \n      <BlogPosts>\n      {        \n        edges.map(({ node }) => (\n<Fwarp>\n        <DocsList\n          key={node.id}\n          cover={node.frontmatter.cover.childImageSharp.fluid}\n          path={node.frontmatter.path}\n          title={node.frontmatter.title}\n          date={node.frontmatter.date}\n          //tags={node.frontmatter.tags}\n          excerpt={node.excerpt}\n        />\n\n</Fwarp>\n      ))\n      }      \n      </BlogPosts>\n      </ContainerWrapper>\n      {/* <Fspace/> */}\n    </Layout>\n  );\n};\n\nexport default Documentation;\n\nDocumentation.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    docs: allMarkdownRemark(\n      filter: { fileAbsolutePath: { glob: \"**/docs/**/*.md\" }frontmatter: { published: { eq: false} } }\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 500)\n          frontmatter {\n            path\n            date\n            title\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 200\n                  quality: 70\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Wrapper","_styled","target","name","styles","Image","TitleLink","RightBlock","_ref","path","cover","title","___EmotionJSX","Container","Link","to","Img","fluid","style","color","BlogPosts","Fwarp","ContainerWrapper","M_Space","data","edges","docs","Layout","Helmet","Header","map","_ref2","node","DocsList","key","id","frontmatter","childImageSharp","date","excerpt"],"sourceRoot":""}