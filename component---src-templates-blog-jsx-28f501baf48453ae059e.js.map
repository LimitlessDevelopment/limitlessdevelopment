{"version":3,"file":"component---src-templates-blog-jsx-28f501baf48453ae059e.js","mappings":"sHAAAA,EAAOC,QAAU,CACfC,WAAY,uBACZC,MAAO,uBACPC,SAAU,uBACVC,YAAa,OACbC,IAAK,iCACLC,QAAS,8DACTC,aAAc,KACdC,KAAM,uBACNC,OAAQ,yBAERC,QAAS,0BACTC,UAAW,YACXC,OAAQ,SACRC,WAAY,UACZC,gBAAiB,UACjBC,QAAS,mB,mHCHXC,EAAQ,MAER,MAUMC,GAAMC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,uIAWNC,GAAWJ,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,iJAmCjB,UApBYE,IAAe,IAAd,KAAEC,GAAMD,EAGnB,MAAME,EAAOD,EAAKE,eACZC,EAAQH,EAAKE,eAAeE,KAClC,OACEC,EAAAA,EAAAA,GAACC,EAAAA,GAAM,MACLD,EAAAA,EAAAA,GAACE,EAAAA,GAAM,CAAC7B,MAAO,GAAGuB,EAAKO,YAAY9B,2CACnC2B,EAAAA,EAAAA,GAACZ,EAAM,CAACgB,MAAO,CAAEC,WAAYT,EAAKU,gBAC/BV,EAAKO,YAAY9B,QAEpB2B,EAAAA,EAAAA,GAACO,EAAAA,GAAS,MACRP,EAAAA,EAAAA,GAACP,EAAW,MACVO,EAAAA,EAAAA,GAAA,OAAKI,MAAS,CAACI,MAAM,OAAQC,KAAM,QAASC,wBAAyB,CAAEC,OAAQb,OAG5E,C","sources":["webpack://gatsby-tutorial-starter/./config/site.js","webpack://gatsby-tutorial-starter/./src/templates/blog.jsx"],"sourcesContent":["module.exports = {\n  pathPrefix: 'limitlessdevelopment', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n  title: 'limitlessdevelopment', // Navigation and Site Title\n  titleAlt: 'limitlessdevelopment', // Title for JSONLD\n  description: 'test',\n  url: 'limitlessdevelopment.github.io', // Domain of your site. No trailing slash!\n  siteUrl: 'https://limitlessdevelopment.github.io/limitlessdevelopment', // url + pathPrefix\n  siteLanguage: 'en', // Language Tag on <html> element\n  logo: 'static/logo/logo.png', // Used for SEO\n  banner: 'static/logo/banner.png',\n  // JSONLD / Manifest\n  favicon: 'static/logo/favicon.png', // Used for manifest favicon generation\n  shortName: 'GatsbyTut', // shortname for manifest. MUST be shorter than 12 characters\n  author: 'Justin', // Author for schemaORGJSONLD\n  themeColor: '#ffffff',\n  backgroundColor: '#ffffff',\n  twitter: '@justinformentin', // Twitter Username\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Layout, Container } from 'layouts';\n//import { Header } from 'components';\nimport config from '../../config/site';\nimport { graphql } from 'gatsby';\n//import MDXRenderer from 'gatsby-mdx/mdx-renderer';\n//import Highlight, { defaultProps } from 'prism-react-renderer';\n//import Code from 'components/Code';\n//import Prism from 'prismjs';\nrequire('prismjs/themes/prism-okaidia.css');\n\nconst StyledLink = styled(Link)`\n  color: ${props => props.theme.colors.white.light};\n  padding: 5px 10px;\n  border: solid 1px #fff;\n  border-radius: 20px;\n  &:hover {\n    color: ${props => props.theme.colors.black.blue};\n    background: ${props => props.theme.colors.white.light};\n  }\n`;\nconst Header = styled.div`\ndisplay: flex;\njustify-content:center;\ntext-align: center;\npadding: 5% 0 2% 0;\n//background: ${props => props.theme.colors.black.blue};\nfont-size: 2rem;\n@media (max-width: 600px) {\n  padding-top: 20%;\n}\n`;\nconst Information = styled.div`\n  text-align: center;\n\n  .prism-code {\n    padding: 0.75rem;\n    border-radius: 5px;\n    margin-bottom: 1rem;\n    font-size: 16px;\n  }\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 1.25rem;\n  }\n`;\n\nconst Tag = ({ data }) => {\n  //const { posts, tagName } = pageContext;\n  //const upperTag = tagName.charAt(0).toUpperCase() + tagName.slice(1);\n  const post = data.markdownRemark;\n  const postM = data.markdownRemark.html;\n  return (\n    <Layout>\n      <Helmet title={`${post.frontmatter.title}  |  Limitless Unity Development`} />\n      <Header style={{ background: post.backgroundCol }}>\n        {post.frontmatter.title}\n      </Header>\n      <Container>\n        <Information>\n          <div style = {{width:\"80vw\", left: \"20vw\"}} dangerouslySetInnerHTML={{ __html: postM }} />\n        </Information>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Tag;\n\nTag.propTypes = {\n  pageContext: PropTypes.shape({\n\n    //posts: PropTypes.array,\n    //tagname: PropTypes.string,\n  }),\n  data: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\nquery($pathSlug: String!) {\n  markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\nhtml\n          frontmatter {\n            path\n            date\n            title\n            backgroundCol\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n`;\n"],"names":["module","exports","pathPrefix","title","titleAlt","description","url","siteUrl","siteLanguage","logo","banner","favicon","shortName","author","themeColor","backgroundColor","twitter","require","Header","_styled","target","name","styles","Information","_ref","data","post","markdownRemark","postM","html","___EmotionJSX","Layout","Helmet","frontmatter","style","background","backgroundCol","Container","width","left","dangerouslySetInnerHTML","__html"],"sourceRoot":""}