{"data":{"markdownRemark":{"html":"<h1><strong>Retro Look Pro API for Legacy standalone effects.</strong></h1>\n<p><strong>API usage examples:</strong></p>\n<p><strong>Example 1</strong></p>\n<p>{{{// This example shows how to access variables from needed RetroLookPro/RetroLookPostPro cached preset.}}}</p>\n<p>{{{// In this case \"development mode\" in \"RetroLookPro/RetroLookPostPro\" should be turned off.}}}</p>\n<p>{{{// Note that all changes will be reversed after you exit game mode. It is much safer to use this method instead of second one.}}}</p>\n<p>'''\nusing UnityEngine;</p>\n<p>using LimitlessDev.RetroLookPro;</p>\n<p>public class APIExampleUsage1 : MonoBehaviour {</p>\n<p>//Reference to RetroLookPro/RetroLookPostPro that you are currently using.</p>\n<p>public RetroLookPro RetroLookReference;</p>\n<p>// Update is called once per frame</p>\n<p>void Update()</p>\n<p>{</p>\n<p>//Enable/Disable needed variable on \"Space\" key press.</p>\n<p>if (Input.GetKeyDown(KeyCode.Space)) {</p>\n<p>if (RetroLookReference.tempPreset.f_Fisheye)</p>\n<p>RetroLookReference.tempPreset.f_Fisheye = false;</p>\n<p>else</p>\n<p>RetroLookReference.tempPreset.f_Fisheye = true;</p>\n<p>} } }</p>\n<p>'''</p>\n<hr>\n<p><strong>Example 2</strong></p>\n<p>{{{// This example shows how to access variables directly from preset Scriptable Object. }}}</p>\n<p>{{{// In this case \"development mode\" in \"RetroLookPro/RetroLookPostPro\" should be turned on.}}}</p>\n<p>{{{// Note that all changes made in Scriptable Objects will be saved after you exit game mode. Very usefull in some cases.}}}</p>\n<p>{{{using UnityEngine;}}}</p>\n<p>{{{using LimitlessDev.RetroLookPro;}}}</p>\n<p>{{{public class APIExampleUsage2 : MonoBehaviour}}}</p>\n<p>{{{{}}}</p>\n<p>{{{    //Reference to the Scriptable Object preset that you are currently using.}}}</p>\n<p>{{{    public PresetScriptableObject RetroLookScriptableObjectReference;}}}</p>\n<p>{{{    }}}\n{{{    // Update is called once per frame}}}</p>\n<p>{{{    void Update()}}}\n{{{    {}}}</p>\n<p>{{{        //Enable/Disable needed variable on \"Space\" key press.}}}</p>\n<p>{{{        if (Input.GetKeyDown(KeyCode.Space))}}}</p>\n<p>{{{        {}}}</p>\n<p>{{{            if (RetroLookScriptableObjectReference.currPreset.f_Fisheye)}}}</p>\n<p>{{{                RetroLookScriptableObjectReference.currPreset.f_Fisheye = false;}}}</p>\n<p>{{{            else}}}</p>\n<p>{{{                RetroLookScriptableObjectReference.currPreset.f_Fisheye = true;}}}</p>\n<p>{{{        }}}}</p>\n<p>{{{    }}}}</p>\n<p>{{{}}}}</p>\n<hr>\n<p>//<strong>Variables:</strong>//</p>\n<ul>\n<li>Bottom Noise</li>\n</ul>\n<p> | bool |useBottomNoise| Enable/disable bottom noise effect.|\n| float |bottomHeight| Height of Stretch/Noise. [0, 0.5]|\n| float |bottomIntensity| Noise intensity. [0, 3]|\n| bool |useBottomStretch| Enable stretch effect.|</p>\n<ul>\n<li>Color Palette</li>\n</ul>\n<p> | bool |enableColorPalette| Enables color palette effect.|\n| ResolutionMode |resolutionMode| The resolution of the pixelated image can be set in two ways.Either by setting absolute values (ConstantResolution) or by setting the pixel size (ConstantPixelSize).|\n| int |resolutionModeIndex| 0 - Constant Resolution, 1 - Constant PixelSize.|\n| Vector2Int| resolution| Change Resolution manually if using resolutionModeIndex - 0.|\n| int |pixelSize| Change pixel size if using resolutionModeIndex - 1, in this case resolution calculates automatically. [1, 256]|\n| float |dither| Dithering effect. [ 0 , 1]|\n| float |opacity| Effect opacity. [0, 1]|\n| int |colorPresetIndex| Palette preset index number in palette presets list.|</p>\n<ul>\n<li>TV Mode</li>\n</ul>\n<p> | bool |<em>enableTVmode| Enable TV effect.|\n| Texture |</em>VHSNoise| Noise texture.|\n| float |<em>textureIntensity | Intensity of noise texture. [0, 8]|\n| float |</em>VerticalOffsetFrequency| Vertical twitch frequency. [0, 100]|\n| float |<em>verticalOffset| Amount of vertical twitch. [0, 1]|\n| float |</em>offsetColor | Amount of color offset. [0, 0.1]|\n| float |<em>OffsetDistortion | Amount of horizontal distortion. [3500, 1]|\n| bool |</em>scan| Enable scanlines.|\n| float| <em>adjustLines | Scanlines amount. [1, 10]|\n| Color |</em>scanLinesColor| Scanlines color.|\n| float| _hardScan| Scanlines effect amount. [-8, -16]|\n| float| _resolution| Effect resolution. [16, 1]|\n| float| maskDark | Dark areas adjustment. [0, 2]|\n| float| maskLight |Light areas adjustment. [0, 2]|\n| Vector4| warp| Warp picture.|</p>\n<ul>\n<li>ByPass mode (Use this mode for passing videos or static images)</li>\n</ul>\n<p> | bool |enableCustomTexture| Enable bypass mode(only for RetroLookPro).|\n| Texture |bypassTex| Bypass Texture(if you have ready to go RenderTexture or any other texture, then no  need to touch spriteTex).|\n| Sprite |spriteTex| Bypass sprite(bypassTex will be computed automaticly).|</p>\n<ul>\n<li>Bleed effect</li>\n</ul>\n<p> | int| b<em>Mode| Bleed Mode index. 0 - \"Old Three Phase\" 1 - \"Three Phase\" 2 - \"Two Phase (slow)\" 3 - \"Custom Curve\".|\n| bool| b</em>Bleed| Enable bleed effect.|\n| int| b<em>LinesMode| Vertical Resolution mode index. 0 - \"Full\" 1 - \"240 \" 2 - \"480 \" 3 - \"Users\".|\n| float| b</em>ScreenLinesNum|Lines Per Height, if b<em>LinesMode = 3.|\n| float | b</em>BleedAmount | Bleed Stretch amount. [0, 15]|\n| int| b<em>BleedLength| Bleed Length [0, 50]. If b</em>Mode = 3 |\n| bool | b<em>BleedCurveSync | Synchronize I and Q chanels.|\n| AnimationCurve| b</em>BleedCurve1|Curve Y chanel.|\n| AnimationCurve| b<em>BleedCurve2|Curve I chanel.|\n| AnimationCurve| b</em>BleedCurve3|Curve Q chanel.|</p>\n<ul>\n<li>Fisheye effect</li>\n</ul>\n<p> | bool |f<em>Fisheye| Enable fisheye effect.|\n| float |f</em>FisheyeBend| Bend Amount. [0, 50]|\n| int |f<em>FisheyeType| Fisheye type index. 0 - \"Default\", 1 - \"Hyperspace\".|\n| float |f</em>FisheyeSize| Fisheye size. [0, 50]|\n| float| f<em>CutoffX| Cutoff on X axes. [0, 50]|\n| float| f</em>CutoffY| Cutoff on Y axes. [0, 50]|\n| float| f<em>FadeX|Fade on X axes. [0, 50]|\n| float| f</em>FadeY|Fade on Y axes. [0, 50]|</p>\n<ul>\n<li>Vignette effect</li>\n</ul>\n<p> | bool |v<em>Vignette| Enable Vignette effect.|\n| float |v</em>VignetteAmount| Amount of vignette effect. [0, 5]|\n| float |v_VignetteSpeed| Vignette twitch speed. [0, 5]|</p>\n<ul>\n<li>Noise</li>\n</ul>\n<p> | int |n<em>NoiseMode|Vertical Resolution index. 0 - \"Global\", 1 - \"Custom\".|\n| float| n</em>NoiseLinesAmountY| Amount of noise lines on Y axes.|\n| float |n<em>NoiseSignalProcessing|Noise Signal Processing Amount. [0, 1]|\n| bool |f</em>Granularity| Enable granularity noise effect.|\n| float |f_GranularityAmount| Granularity Alpha. [0, 0.1]|</p>\n<p>   Signal Noise\n|bool |f<em>SignalNoise| Enable signal noise.|\n| float |f</em>SignalNoiseAmount| Signal amount. [0, 1]|\n| float| f_SignalNoisePower|Signal power. [0, 1]|</p>\n<p>   Tape Noise\n| bool |f<em>TapeNoise|Enable tape noise.|\n| float |f</em>TapeNoiseTH|Tape Amount. [0, 1.5]|\n| float |f<em>TapeNoiseAmount|Tape alpha. [0, 1.5]|\n| float |f</em>TapeNoiseSpeed|Tape speed. [0, 1.5]|</p>\n<p>   Line Noise\n| bool |f<em>LineNoise| Enable line noise.|\n| float |f</em>LineNoiseAmount. |Amount of line noise. [0, 10]|\n| float |f_LineNoiseSpeed| Noise speed. [0, 10]|</p>\n<ul>\n<li>Video Shake filter</li>\n</ul>\n<p>   Jitter\n| bool |j<em>ScanLines| Enable scanlines.|\n| float |j</em>ScanLinesWidth| Width of the scanlines. [0, 20]|\n| bool |j<em>LinesFloat| Floating lines amount.|\n| float |j</em>LinesSpeed|Lines speed. [-3, 3]|\n| bool |j<em>Stretch|Enable stretch noise.|\n| bool |j</em>JitterHorizontal|Enable Horizontal Interlacing.|\n| float |j<em>JitterHorizAmount|Amount of horizontal interlacing. [0, 5]|\n| bool |j</em>JitterVertical|Shake Vaertical.|\n| float |j<em>VertAmount| Amount of shake. [0, 15]|\n| float |j</em>VertSpeed| Speed of vertical shake. [0, 5]|</p>\n<p>   Twitch\n| bool |j<em>TwitchHorizontal|Enable Twitch on X axes.|\n| float |j</em>TwitchHorizFreq|Twitch frequency on X axes. [0, 5]|\n| bool |j<em>TwitchVertical|Enable Twitch on Y axes.|\n| float |j</em>TwitchVertFreq|Twitch frequency on Y axes. [0, 5]|</p>\n<ul>\n<li>Picture correction</li>\n</ul>\n<p> | bool | p<em>PictureCorrection| Enable Picture correction effect.|\n| float | p</em>PictureCorr1|Y permanent adjustment. [-0.25, 0.25]|\n| float | p<em>PictureCorr2|I permanent adjustment. [-0.25, 0.25]|\n| float | p</em>PictureCorr3|Q permanent adjustment. [-0.25, 0.25]|\n| float | p<em>PictureShift1|tweak/shift Y values. [-2, 2]|\n| float | p</em>PictureShift2|tweak/shift I values. [-2, 2]|\n| float | p<em>PictureShift3|tweak/shift Q values. [-2, 2]|\n| float | p</em>Gamma|use this to balance the gamma(brightness) of the signal. [0, 2]|</p>\n<ul>\n<li>Artefacts</li>\n</ul>\n<p> | bool| a<em>Artefacts| Enable artefacts/trail effect.|\n| float| a</em>ArtefactsThreshold| Brightness threshold of input. [0, 1]|\n| float| a<em>ArtefactsAmount| Amplifies the input amount after cutoff. [0, 3]|\n| float| a</em>ArtefactsFadeAmount|Value represents how fast trail fades. [0, 1].\n| Color| a_ArtefactsColor| Artefacts color.|</p>\n<ul>\n<li>Time Setting\n| bool| independentTimeOn|In case of using Time.timeScale = 0 (or Application.timeScale = 0) ,it stops shader timer and it's animation. If you still need shader to run, use unscaled time\" feature.|</li>\n</ul>","frontmatter":{"path":"/Retro Look Pro Legacy Documentation and API","date":"2019-05-10","title":"Retro Look Pro Legacy documentation and API","backgroundCol":"#978e86"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"pathSlug":"/Retro Look Pro Legacy Documentation and API"}}